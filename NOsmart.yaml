# DNS防泄露版本
# 不是必须请勿用，不懂不要随便更改DNS模块
# 必读！！！
# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 跑裸核用户请自行去掉下方控制面板模块的注释。

# 机场订阅
proxy-providers:
  Airport1:
    url: "机场订阅填到这里，两端引号不要去掉，不要填写到下方链接里去！！"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连

# 节点信息
proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: true
unified-delay: true
tcp-concurrent: true
# interface-name: enp6s18
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
profile:
  store-selected: true
  store-fake-ip: true

# 为防止使用插件朋友遇到面板问题，我注释掉了此模块。
# 跑裸核朋友自行删除注释即可，使用nikki仅内核的ui路径改为/etc/nikki/run/ui
#external-controller: 0.0.0.0:9090
#secret: ""
#external-ui: "/etc/mihomo/ui"
#external-ui-name: zashboard
#external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  #使用nikki，混入全部不修改的情况，开启接口指定为nikki
  #使用仅内核自行修改下面三项为true
  #device: nikki
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:Private / Domain,China / Domain,Apple / Domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  proxy-server-nameserver:
    - 119.29.29.29
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:Private / Domain,China / Domain,Apple / Domain":
      - 223.5.5.5
      - 119.29.29.29
 
 # 出站策略，根据自己情况调整每个策略里分组排序，增删都可以，比如把美国自动放到第一个，比如删除香港故转，注意别漏掉表情逗号等。
# 如果相应分组没有筛选到对应的国家，请根据自己节点名字调整筛选关键字。
# 没有再使用锚点，是考虑很多新手修改难度，这样新手修改某个分组更容易些。

proxy-groups:

# 业务分流组（保持不变）
  - {name: 🎮 游戏平台, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 🎥 流媒体平台, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 📲 海外社交, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 🤖 AI, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 🍀 加密货币, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 🪟 智能设备, type: select, proxies: [🔯 亚太地区-故转, 🌐 亚太地区-手选, 直连, 拒绝]}
  - {name: 🛑 NSFW, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选]}
  - {name: 🚫 Adobe, type: select, proxies: [♻️ 所有地区-智选, 直连, 拒绝]}
  - {name: 🚀 国外网站, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选, 直连, 拒绝]}
  - {name: 🐟 漏网之鱼, type: select, proxies: [♻️ 所有地区-智选, 🌐 所有地区-手选, 🔯 亚太地区-故转, 🌐 亚太地区-手选, 🔯 欧美地区-故转, 🌐 欧美地区-手选, 🔯 其他地区-故转, 🌐 其他地区-手选, 直连, 拒绝]}


# 所有地区组
  - {name: ♻️ 所有地区-智选, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连, 拒绝)).)*$"}
  - {name: 🌐 所有地区-手选, type: select, include-all: true}

# 亚太地区组
  - {name: 🔯 亚太地区-故转, type: fallback, interval: 180, lazy: false, proxies: [🌐 亚太地区-手选, ♻️ 亚太地区-智选]}
  - {name: ♻️ 亚太地区-智选, type: url-test, include-all: true, tolerance: 20, interval: 300, 
      filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|Korea|🇰🇷|Australia|澳洲|🇦🇺|Sydney|悉尼|Melbourne|墨尔本)).*$"}
  - {name: 🌐 亚太地区-手选, type: select, include-all: true, 
      filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|Korea|🇰🇷|Australia|澳洲|🇦🇺|Sydney|悉尼|Melbourne|墨尔本)).*$"}

# 欧美地区组
  - {name: 🔯 欧美地区-故转, type: fallback, interval: 180, lazy: false, proxies: [🌐 欧美地区-手选, ♻️ 欧美地区-智选]}
  - {name: ♻️ 欧美地区-智选, type: url-test, include-all: true, tolerance: 20, interval: 300, 
      filter: "(?=.*(US|United States|美国|🇺🇸|纽约|洛杉矶|芝加哥|伦敦|英国|UK|Germany|德国|France|法国|瑞士|荷兰|Canada|加拿大|Europe|欧洲)).*$"}
  - {name: 🌐 欧美地区-手选, type: select, include-all: true, 
      filter: "(?=.*(US|United States|美国|🇺🇸|纽约|洛杉矶|芝加哥|伦敦|英国|UK|Germany|德国|France|法国|瑞士|荷兰|Canada|加拿大|Europe|欧洲)).*$"}

# 其他地区组  
  - {name: 🔯 其他地区-故转, type: fallback, interval: 180, lazy: false, proxies: [🌐 其他地区-手选, ♻️ 其他地区-智选]}
  - {name: ♻️ 其他地区-智选, type: url-test, include-all: true, tolerance: 20, interval: 300, 
      filter: "^((?!(广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|Korea|🇰🇷|Australia|澳洲|🇦🇺|Sydney|悉尼|Melbourne|墨尔本|US|United States|美国|🇺🇸|纽约|洛杉矶|芝加哥|伦敦|英国|UK|Germany|德国|France|法国|瑞士|荷兰|Canada|加拿大|Europe|欧洲)).)*$"}
  - {name: 🌐 其他地区-手选, type: select, include-all: true, 
      filter: "^((?!(广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|Korea|🇰🇷|Australia|澳洲|🇦🇺|Sydney|悉尼|Melbourne|墨尔本|US|United States|美国|🇺🇸|纽约|洛杉矶|芝加哥|伦敦|英国|UK|Germany|德国|France|法国|瑞士|荷兰|Canada|加拿大|Europe|欧洲)).)*$"}

# ========================
# 规则引擎（rules）
# ========================
rules:
  # 默认规则（别动顺序）
  - RULE-SET,Private / Domain, 直连
  - RULE-SET,Private / IP, 直连,no-resolve
  - DOMAIN-SUFFIX,qichiyu.com,🚀 国外网站
  - RULE-SET,Proxylite, 🚀 国外网站
  - RULE-SET,Google / Domain, 🚀 国外网站
  - RULE-SET,Google / IP, 🚀 国外网站,no-resolve

  # adobe
  - RULE-SET,Adobe / Domain, 🚫 Adobe

  # 游戏平台
  - RULE-SET,GameDownload / Domain, 直连
  - RULE-SET,GameDownloadCN / Domain, 直连
  - RULE-SET,Game / Domain, 🎮 游戏平台

  # 流媒体平台
  - RULE-SET,Netflix / Domain, 🎥 流媒体平台
  - RULE-SET,Netflix / IP, 🎥 流媒体平台,no-resolve
  - RULE-SET,Disney Plus / Domain, 🎥 流媒体平台
  - RULE-SET,HBO Max / Domain, 🎥 流媒体平台
  - RULE-SET,Spotify / Domain, 🎥 流媒体平台
  - RULE-SET,PrimeVideo / Domain, 🎥 流媒体平台

  # 海外社交
  - RULE-SET,Youtube / Domain, 📲 海外社交
  - RULE-SET,TikTok / Domain, 📲 海外社交
  - RULE-SET,GitHub / Domain, 📲 海外社交
  - RULE-SET,Telegram / Domain, 📲 海外社交
  - RULE-SET,Telegram / IP, 📲 海外社交,no-resolve
  - RULE-SET,Twitter / Domain, 📲 海外社交
  - RULE-SET,Facebook / Domain, 📲 海外社交
  - RULE-SET,WhatsApp / Domain, 📲 海外社交
  - RULE-SET,Amazon / Domain, 📲 海外社交

  # AI
  - RULE-SET,AI / Domain, 🤖 AI

  # 加密货币
  - RULE-SET,Crypto / Domain, 🍀 加密货币

  # 智能设备
  - RULE-SET,Microsoft / Domain, 🪟 智能设备
  - RULE-SET,Apple / Domain, 🪟 智能设备
  - RULE-SET,Apple-CN / Domain, 🪟 智能设备

  #  NSFW
  - RULE-SET,NSFW, 🛑 NSFW

  # 默认规则（别动顺序）
  - RULE-SET,Geolocation-!cn, 🚀 国外网站
  - RULE-SET,China / Domain, 直连
  - RULE-SET,China / IP, 直连,no-resolve

  # 漏网之鱼
  - MATCH, 🐟 漏网之鱼

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  class: &class { type: http, interval: 86400, behavior: classical, format: text }
  yaml: &yaml { type: http, interval: 86400, behavior: classical, format: yaml }

rule-providers:

  # 默认规则（勿动）
  Private / Domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  Private / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  Proxylite: { <<: *class, url: "https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/main/proxy.list"}

  # 拒绝
  Adobe / Domain: { <<: *yaml, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Adobe/Adobe.yaml" }

  # 游戏平台CN
  GameDownload / Domain: { <<: *yaml, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Game/GameDownload/GameDownload.yaml" }
  GameDownloadCN / Domain: { <<: *yaml, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.yaml" }

  # 游戏平台
  Game / Domain: { <<: *yaml, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/Game/Game.yaml" }
  
  # 流媒体平台
  Netflix / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs" }
  Netflix / IP: { <<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs" }
  Disney Plus / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs" }
  HBO Max / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs" }
  Spotify / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs" }
  PrimeVideo / Domain: { <<: *class, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Clash/PrimeVideo/PrimeVideo.list" }

  # 海外社交
  GitHub / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs" }
  Google / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs" }
  Google / IP: { <<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs" }
  Telegram / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs" }
  Telegram / IP: { <<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs" }
  Twitter / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs" }
  WhatsApp / Domain: { <<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Whatsapp/Whatsapp.list" }
  Facebook / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs" }
  Amazon / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/amazon.mrs" }
  Youtube / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs" }
  TikTok / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs" }

  # AI 服务
  AI / Domain: { <<: *domain, url: "https://gh-proxy.com/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs" }

  # 加密货币
  Crypto / Domain: { <<: *class, url: "https://gh-proxy.com/github.com/blackmatrix7/ios_rule_script/blob/master/rule/Surge/Crypto/Crypto.list" }

  # 智能设备
  Microsoft / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs" }
  Apple / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs" }
  Apple-CN / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs" }

  # 特殊规则
  NSFW: { <<: *yaml, url: "https://gh-proxy.com/github.com/tanmoumou252/NSFWruleset/raw/main/NSFW.yaml" }

  # 默认规则（勿动）
  Geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  China / Domain: { <<: *domain, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs" }
  China / IP: { <<: *ip, url: "https://gh-proxy.com/github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs" }
